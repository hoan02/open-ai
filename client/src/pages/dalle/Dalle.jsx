import React, { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Link, useNavigate } from "react-router-dom";
import { Image } from "cloudinary-react";

import avtLogo from "../../assets/images/avt-logo.png";
import "./Dalle.scss";
import BackToTop from "../../components/backToTop/BackToTop";
import newRequest from "../../utils/newRequest";
import toastService from "../../utils/toastService.js";
import Card from "../../components/card/Card";

const Dalle = () => {
  const currentUser = JSON.parse(localStorage.getItem("currentUser"));
  const navigate = useNavigate();
  const [searchText, setSearchText] = useState("");

  const { data: allPosts, isLoading } = useQuery({
    queryKey: ["posts"],
    queryFn: async () => {
      const response = await newRequest.get(`/dalle`);
      return response.data.data.reverse();
    },
  });

  const searchedResults = allPosts?.filter(
    (item) =>
      item.title.toLowerCase().includes(searchText.toLowerCase()) ||
      item.prompt.toLowerCase().includes(searchText.toLowerCase())
  );

  const handleSearchChange = (e) => {
    setSearchText(e.target.value);
  };

  const handleClickGenerate = () => {
    if (!currentUser) {
      toastService.info("You must be logged in to continue!");
      navigate("/login");
      return;
    }
    navigate(`generate`);
  };

  return (
    <div className="dalle">
      <div className="header">
        <div className="headerLeft">
          <div className="title">The Community Showcase</div>
          <div className="subTitle">
            Browse through a collection of imaginative and visually stunning
            images generated by DALL-E AI
          </div>
          <button onClick={handleClickGenerate}>â–¶ Generate now</button>
        </div>
        <div className="headerRight">
          <img src={avtLogo} alt="" />
        </div>
      </div>
      <div className="search">
        <input
          className="input"
          type="text"
          placeholder="Search somethings"
          value={searchText}
          onChange={handleSearchChange}
        />
      </div>
      <div className="container">
        <div className="mainContainer">
          {searchText ? (
            <h2 className="titleContainer">
              Showing Resuls for <span>"{searchText}"</span>:
            </h2>
          ) : (
            <h2 className="titleContainer"></h2>
          )}
          <div className="renderCard">
            {searchedResults?.map((post, index) => {
              return <Card key={post._id} {...post} idColor={index % 5} />;
            })}
          </div>
        </div>
      </div>
      <BackToTop />
    </div>
  );
};

export default Dalle;
